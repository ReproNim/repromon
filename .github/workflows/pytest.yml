---
name: PyTest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  POSTGRES_DB: rmdb

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - '3.10'
          - '3.11'
          - '3.12'
    steps:
    - name: Configure environment
      run: |
        git config --global user.name "repromon-test"
        git config --global user.email "repromon-test@example.com"
        uname -a
        date -Is
        date -u

    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Create venv and poetry build
      run: |
        pwd
        ls -l
        pip install poetry
        poetry config virtualenvs.create false
        poetry config virtualenvs.in-project true
        poetry env use `which python`
        python --version
        poetry --version
        poetry install
        poetry build
      shell: bash

    - name: Run pytest
      run: |
        poetry run pytest --cov=. --cov-report=xml
      shell: bash

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
